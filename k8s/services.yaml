# Runner load balancer
apiVersion: v1
kind: Service
metadata:
  name: palcode-runner-lb
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: LoadBalancer
  selector:
    app: palcode-runner
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP

# API load balancer
---
apiVersion: v1
kind: Service
metadata:
  name: palcode-api-lb
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: LoadBalancer
  selector:
    app: palcode-api
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP

# Ingress controller
# setting up nginx ingress: https://ruleoftech.com/2020/using-nginx-ingress-controller-on-google-kubernetes-engine
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: cloudflare-ingress
  namespace: default
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://palcode.dev,http://localhost:3000"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/affinity: “cookie”
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
spec:
  rules:
    - host: api.palcode.dev
      http:
        paths:
          - backend:
              serviceName: palcode-api-lb
              servicePort: 80
    - host: runner.palcode.dev
      http:
        paths:
          - backend:
              serviceName: palcode-runner-lb
              servicePort: 80

  tls:
    - secretName: runner-and-api-cloudflare
